services:
  dev_dataverse:
    container_name: "dev_dataverse"
    hostname: dataverse
    image: ${APP_IMAGE}
    restart: on-failure
    user: payara
    environment:
      DATAVERSE_DB_HOST: postgres
      DATAVERSE_DB_PASSWORD: secret
      DATAVERSE_DB_USER: ${DATAVERSE_DB_USER}
      ENABLE_JDWP: "1"
      ENABLE_RELOAD: "1"
      SKIP_DEPLOY: "${SKIP_DEPLOY}"
      _CT_DATAVERSE_SITEURL: "${_CT_DATAVERSE_SITEURL}"
      _CT_DATAVERSE_FQDN: "${_CT_DATAVERSE_FQDN}"
      DATAVERSE_JSF_REFRESH_PERIOD: "1"
      DATAVERSE_FEATURE_API_BEARER_AUTH: "1"
      DATAVERSE_MAIL_SYSTEM_EMAIL: "odissei@dansdemo.nl"
      DATAVERSE_MAIL_MTA_HOST: "live.smtp.mailtrap.io"
      DATAVERSE_MAIL_MTA_PORT: 465
      DATAVERSE_MAIL_MTA_SSL_ENABLE: true
      DATAVERSE_MAIL_MTA_AUTH: true
      DATAVERSE_MAIL_MTA_USER: "api"
      DATAVERSE_MAIL_MTA_PASSWORD: "secret"
      DATAVERSE_SPI_EXPORTERS_DIRECTORY: "/dv/exporters"
      # These two oai settings are here to get HarvestingServerIT to pass
      dataverse_oai_server_maxidentifiers: "2"
      dataverse_oai_server_maxrecords: "2"
      JVM_ARGS: -Ddataverse.files.storage-driver-id=file1
        -Ddataverse.files.file1.type=file
        -Ddataverse.files.file1.label=Filesystem
        -Ddataverse.files.file1.directory=${STORAGE_DIR}/store
        -Ddataverse.pid.providers=fake
        -Ddataverse.pid.default-provider=fake
        -Ddataverse.pid.fake.type=FAKE
        -Ddataverse.pid.fake.label=FakeDOIProvider
        -Ddataverse.pid.fake.authority=10.5072
        -Ddataverse.pid.fake.shoulder=FK2/
    ports:
      - "8080:8080" # HTTP (Dataverse Application)
      - "4949:4848" # HTTPS (Payara Admin Console)
      - "9009:9009" # JDWP
      - "8686:8686" # JMX
    networks:
      - dataverse
      - traefik
    depends_on:
      - dev_postgres
      - dev_solr
      - dev_dv_initializer
    volumes:
      - ./docker-dev-volumes/app/data:/dv
      - ./docker-dev-volumes/app/secrets:/secrets
    tmpfs:
      - /dumps:mode=770,size=2052M,uid=1000,gid=1000
      - /tmp:mode=770,size=2052M,uid=1000,gid=1000
    mem_limit: 8589934592 # 2 GiB
    mem_reservation: 2048m
    privileged: false

  dev_bootstrap:
    container_name: "dev_bootstrap"
    #image: gdcc/configbaker:unstable
    image: ${BASE_IMAGE}
    restart: "no"
    command:
      - bootstrap.sh
      - dev
    networks:
      - dataverse

  dev_dv_initializer:
    container_name: "dev_dv_initializer"
    #image: gdcc/configbaker:unstable
    image: ${BASE_IMAGE}
    restart: "no"
    command:
      - sh
      - -c
      - "fix-fs-perms.sh dv"
    volumes:
      - ./docker-dev-volumes/app/data:/dv

  dev_postgres:
    container_name: "dev_postgres"
    hostname: postgres
    image: postgres:${POSTGRES_VERSION}
    restart: on-failure
    environment:
      - POSTGRES_USER=${DATAVERSE_DB_USER}
      - POSTGRES_PASSWORD=secret
    ports:
      - "5432:5432"
    networks:
      - dataverse
    volumes:
      - ./docker-dev-volumes/postgresql/data:/var/lib/postgresql/data

  dev_solr_initializer:
    container_name: "dev_solr_initializer"
    image: gdcc/configbaker:unstable
    restart: "no"
    command:
      - sh
      - -c
      - "fix-fs-perms.sh solr && cp -a /template/* /solr-template"
    volumes:
      - ./docker-dev-volumes/solr/data:/var/solr
      - ./docker-dev-volumes/solr/conf:/solr-template

  dev_solr:
    container_name: "dev_solr"
    hostname: "solr"
    image: solr:${SOLR_VERSION}
    depends_on:
      - dev_solr_initializer
    restart: on-failure
    ports:
      - "8983:8983"
    networks:
      - dataverse
    command:
      - "solr-precreate"
      - "collection1"
      - "/template"
    volumes:
      - ./docker-dev-volumes/solr/data:/var/solr
      - ./docker-dev-volumes/solr/conf:/template

networks:
  traefik:
    external: true
  dataverse:
    driver: bridge